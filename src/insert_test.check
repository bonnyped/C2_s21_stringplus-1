#suite insert_test

#test insert_00
  char src[BUFFSIZE] = "AAA";
  char str[BUFFSIZE] = "b";
  char* res = s21_insert(src, str, 0);
  ck_assert_pstr_eq("bAAA", res);
  if (res) free(res);

#test insert_01
  char src[BUFFSIZE] = "AAA";
  char str[BUFFSIZE] = " ";
  char* res = s21_insert(src, str, 0);
  ck_assert_pstr_eq(" AAA", res);
  if (res) free(res);

#test insert_02
  char src[BUFFSIZE] = "AAA";
  char str[BUFFSIZE] = "b";
  char* res = s21_insert(src, str, 5);
  ck_assert_pstr_eq(s21_NULL, res);
  if (res) free(res);

#test test_insert_1
  char s1[30] = "hello, world!";
  char s3[] = "hELLO, WORLD!";
  char s4[] = "hello, hELLO, WORLD!world!";
  s21_size_t num = 7;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_2
  char s1[30] = "";
  char s3[] = "";
  char *s4 = s21_NULL;
  s21_size_t num = 7;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_3
  char *s1 = s21_NULL;
  char s3[] = "";
  char *s4 = s21_NULL;
  s21_size_t num = 0;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_4
  char s1[30] = "abcdefghij";
  char s3[] = "\'I WAS HERE\'";
  char s4[] = "abc\'I WAS HERE\'defghij";
  s21_size_t num = 3;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_5
  char s1[30] = "abc";
  char s3[] = "333";
  char *s4 = s21_NULL;
  s21_size_t num = 10;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_6
  char s1[30] = "hello, world!";
  char s3[] = "hELLO, WORLD!";
  char *s4 = s21_NULL;
  s21_size_t num = -1;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_7
  char *s1 = s21_NULL;
  char *s3 = s21_NULL;
  char *s4 = s21_NULL;
  s21_size_t num = 0;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_8
  char s1[30] = "";
  char s3[] = "";
  char s4[] = "";
  s21_size_t num = 0;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_9
  char s1[] = "wtf";
  char *s3 = s21_NULL;
  char *s4 = s21_NULL;
  s21_size_t num = 0;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s4, s2);
  if (s2) free(s2);

#test test_insert_10
  char s1[] = "";
  char *s3 = s21_NULL;
  char *s4 = s21_NULL;
  s21_size_t num = 0;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s2, s4);
  if (s2) free(s2);

#test test_insert_11
  char s1[30] = "1234";
  char *s3 = "\0";
  char *s4 = "1234";
  s21_size_t num = 2;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s2, s4);
  if (s2) free(s2);

#test test_insert_12
  char s1[30] = "1234";
  char *s3 = s21_NULL;
  char *s4 = s21_NULL;
  s21_size_t num = 2;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s2, s4);
  if (s2) free(s2);

#test test_insert_13
  char s1[30] = "1234";
  char *s3 = "a";
  char *s4 = s21_NULL;
  s21_size_t num = 33;
  char *s2 = s21_insert(s1, s3, num);
  ck_assert_pstr_eq(s2, s4);
  if (s2) free(s2);
